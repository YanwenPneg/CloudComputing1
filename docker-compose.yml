version: "3"
services:
  web:
    # replace username/repo:tag with your name and image details
    image: nclcloudcomputing/javabenchmarkapp
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.3"
          memory: 500M
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"
    networks:
      - webnet

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - webnet

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      # ME_CONFIG_MONGODB_ADMINUSERNAME: root
      # ME_CONFIG_MONGODB_ADMINPASSWORD: example
      # ME_CONFIG_MONGODB_URL: mongo://root:example@mongo:27017/
    depends_on:
      - mongo
    networks:
      - webnet


  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "88:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet

  master:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H http://master:8089

  worker:
    image: locustio/locust:master
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host master

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.45.0
    container_name: cadvisor
    ports:
      - "8088:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    privileged: true

networks:
  webnet:
