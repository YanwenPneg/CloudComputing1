docker pull nclcloudcomputing/javabenchmarkapp
docker pull locustio/locust 
docker pull mongo
docker pull gcr.io/cadvisor/cadvisor:v0.45.0
docker pull dockersamples/visualizer

mkdir /mnt/sda1
mount /dev/sda1 /mnt/sda1
cd /mnt/sda1
du -hs * | sort -h
sudo apt autoremove

docker swarm init --advertise-addr 192.168.18.141
docker swarm leave --force
docker stack deploy -c docker-compose.yml cc

https://github.com/ncl-iot-team/cadvisor-scraper


打包
sudo apt install maven

mvn package

touch Dockerfile

写daocker file

FROM openjdk:8-jdk-alpine
RUN addgroup -S spring && adduser -S spring -G spring
USER spring:spring
ARG JAR_FILE=target/*.jar
COPY ${JAR_FILE} app.jar
ENTRYPOINT ["java","-jar","/app.jar"]

 version: "3"
services:
  web:
    # replace username/repo:tag with your name and image details
    image: nclcloudcomputing/javabenchmarkapp
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.3"
          memory: 500M
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"
    networks:
      - webnet

  mongo:
    image: mongo
    ports:
      - 27017:27017
    networks:
      - webnet

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo
    networks:
      - webnet


  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "88:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet

  locust:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./locustfile.py:/mnt/locust/locustfile.py
    command: -f /mnt/locust/locustfile.py

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.45.0
    ports:
      - "8088:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

networks:
  webnet:

import time
from locust import HttpUser,task,between

class QuickstartUser(HttpUser):
  wait_time = between(1,5)

  @task
  def prime_check(self):
    self.client.get("/primecheck")
